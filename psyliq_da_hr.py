# -*- coding: utf-8 -*-
"""Psyliq_DA_HR.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k7Qnc4qMuuRQr4YY5oUfoOfEqkFQRqLn
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd
import io

in_time_df = pd.read_csv(io.BytesIO(uploaded['in_time.csv']))
manager_survey_data_df = pd.read_csv(io.BytesIO(uploaded['manager_survey_data.csv']))
out_time_df = pd.read_csv(io.BytesIO(uploaded['out_time.csv']))
employee_survey_data_df = pd.read_csv(io.BytesIO(uploaded['employee_survey_data.csv']))
general_data_df = pd.read_csv(io.BytesIO(uploaded['general_data.csv']))

print(employee_survey_data_df.head())
print(general_data_df.head())
print(in_time_df.head())
print(manager_survey_data_df.head())
print(out_time_df.head())

# Q1
import pandas as pd

# Load the dataset
general_data = pd.read_csv('general_data.csv')

# Filter the dataset for employees aged 30 and above
filtered_data = general_data[general_data['Age'] >= 30]
print(filtered_data)

#Q2
pivot_table = general_data.pivot_table(values='MonthlyIncome', index='JobRole', aggfunc='mean')
print(pivot_table)

#Q3
average_income = general_data['MonthlyIncome'].mean()
general_data['AboveAverageIncome'] = general_data['MonthlyIncome'] > average_income
print(general_data[['EmployeeID', 'MonthlyIncome', 'AboveAverageIncome']])

#Q4
import matplotlib.pyplot as plt

# Plotting the distribution of employee ages
plt.figure(figsize=(10, 6))
general_data['Age'].value_counts().sort_index().plot(kind='bar')
plt.xlabel('Age')
plt.ylabel('Number of Employees')
plt.title('Distribution of Employee Ages')
plt.show()

#Q5
# Identify missing or inconsistent values
missing_departments = general_data['Department'].isnull().sum()
print(f"Missing Department values: {missing_departments}")

# Drop rows with missing values in the Department column
cleaned_data = general_data.dropna(subset=['Department'])
print(cleaned_data)

#Q8
pivot_table = general_data.pivot_table(values='EmployeeID', index='MaritalStatus', columns='Department', aggfunc='count')
print(pivot_table)

#Q15
filtered_data = general_data[general_data['JobLevel'] >= 3]
total_income_per_department = filtered_data.groupby('Department')['MonthlyIncome'].sum()
print(total_income_per_department)

#Q16
general_data['IncreasedIncome'] = general_data['MonthlyIncome'] * (1 + 0.1 * general_data['PercentSalaryHike'])
print(general_data[['EmployeeID', 'MonthlyIncome', 'PercentSalaryHike', 'IncreasedIncome']])